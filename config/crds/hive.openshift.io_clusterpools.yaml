apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: clusterpools.hive.openshift.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.ready
    name: Ready
    type: string
  - JSONPath: .spec.size
    name: Size
    type: string
  - JSONPath: .spec.baseDomain
    name: BaseDomain
    type: string
  - JSONPath: .spec.imageSetRef.name
    name: ImageSet
    type: string
  group: hive.openshift.io
  names:
    kind: ClusterPool
    listKind: ClusterPoolList
    plural: clusterpools
    shortNames:
    - cp
    singular: clusterpool
  scope: Namespaced
  subresources:
    scale:
      specReplicasPath: .spec.size
      statusReplicasPath: .status.size
    status: {}
  validation:
    openAPIV3Schema:
      description: ClusterPool represents a pool of clusters that should be kept ready
        to be given out to users. Clusters are removed from the pool once claimed
        and then automatically replaced with a new one.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ClusterPoolSpec defines the desired state of the ClusterPool.
          properties:
            baseDomain:
              description: BaseDomain is the base domain to use for all clusters created
                in this pool.
              type: string
            controlPlaneMachinePool:
              description: ControlPlaneMachineConfig allows defining a machinepool
                declaration for control plane nodes
              properties:
                aws:
                  description: AWS is the configuration used when installing on AWS.
                  properties:
                    amiID:
                      description: AMIID is the AMI that should be used to boot the
                        ec2 instance. If set, the AMI should belong to the same region
                        as the cluster.
                      type: string
                    rootVolume:
                      description: EC2RootVolume defines the root volume for EC2 instances
                        in the machine pool.
                      properties:
                        iops:
                          description: IOPS defines the amount of provisioned IOPS.
                            This is only valid for type io1.
                          minimum: 0
                          type: integer
                        kmsKeyARN:
                          description: The KMS key that will be used to encrypt the
                            EBS volume. If no key is provided the default KMS key
                            for the account will be used. https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetEbsDefaultKmsKeyId.html
                          type: string
                        size:
                          description: Size defines the size of the volume in gibibytes
                            (GiB).
                          minimum: 0
                          type: integer
                        type:
                          description: Type defines the type of the volume.
                          type: string
                      required:
                      - size
                      - type
                      type: object
                    type:
                      description: InstanceType defines the ec2 instance type. eg.
                        m4-large
                      type: string
                    zones:
                      description: Zones is list of availability zones that can be
                        used.
                      items:
                        type: string
                      type: array
                  type: object
                azure:
                  description: Azure is the configuration used when installing on
                    Azure.
                  properties:
                    osDisk:
                      description: OSDisk defines the storage for instance.
                      properties:
                        diskSizeGB:
                          description: DiskSizeGB defines the size of disk in GB.
                          format: int32
                          minimum: 0
                          type: integer
                        diskType:
                          description: DiskType defines the type of disk. The valid
                            values are Standard_LRS, Premium_LRS, StandardSSD_LRS
                            For control plane nodes, the valid values are Premium_LRS
                            and StandardSSD_LRS. Default is Premium_LRS
                          enum:
                          - Standard_LRS
                          - Premium_LRS
                          - StandardSSD_LRS
                          type: string
                      required:
                      - diskSizeGB
                      type: object
                    type:
                      description: InstanceType defines the azure instance type. eg.
                        Standard_DS_V2
                      type: string
                    zones:
                      description: Zones is list of availability zones that can be
                        used. eg. ["1", "2", "3"]
                      items:
                        type: string
                      type: array
                  type: object
                baremetal:
                  description: BareMetal is the configuration used when installing
                    on bare metal.
                  type: object
                gcp:
                  description: GCP is the configuration used when installing on GCP
                  properties:
                    osDisk:
                      description: OSDisk defines the storage for instance.
                      properties:
                        DiskSizeGB:
                          description: DiskSizeGB defines the size of disk in GB.
                          format: int64
                          maximum: 65536
                          minimum: 16
                          type: integer
                        DiskType:
                          description: DiskType defines the type of disk. The valid
                            values are pd-standard and pd-ssd For control plane nodes,
                            the valid value is pd-ssd.
                          enum:
                          - pd-ssd
                          - pd-standard
                          type: string
                      required:
                      - DiskSizeGB
                      type: object
                    type:
                      description: InstanceType defines the GCP instance type. eg.
                        n1-standard-4
                      type: string
                    zones:
                      description: Zones is list of availability zones that can be
                        used.
                      items:
                        type: string
                      type: array
                  type: object
                libvirt:
                  description: Libvirt is the configuration used when installing on
                    libvirt.
                  type: object
                openstack:
                  description: OpenStack is the configuration used when installing
                    on OpenStack.
                  properties:
                    additionalNetworkIDs:
                      description: AdditionalNetworkIDs contains IDs of additional
                        networks for machines, where each ID is presented in UUID
                        v4 format. Allowed address pairs won't be created for the
                        additional networks.
                      items:
                        type: string
                      type: array
                    additionalSecurityGroupIDs:
                      description: AdditionalSecurityGroupIDs contains IDs of additional
                        security groups for machines, where each ID is presented in
                        UUID v4 format.
                      items:
                        type: string
                      type: array
                    rootVolume:
                      description: RootVolume defines the root volume for instances
                        in the machine pool. The instances use ephemeral disks if
                        not set.
                      properties:
                        size:
                          description: Size defines the size of the volume in gibibytes
                            (GiB). Required
                          type: integer
                        type:
                          description: Type defines the type of the volume. Required
                          type: string
                      required:
                      - size
                      - type
                      type: object
                    type:
                      description: FlavorName defines the OpenStack Nova flavor. eg.
                        m1.large
                      type: string
                    zones:
                      description: Zones is the list of availability zones where the
                        instances should be deployed. If no zones are provided, all
                        instances will be deployed on OpenStack Nova default availability
                        zone
                      items:
                        type: string
                      type: array
                  required:
                  - type
                  type: object
                ovirt:
                  description: Ovirt is the configuration used when installing on
                    oVirt.
                  properties:
                    cpu:
                      description: CPU defines the VM CPU.
                      properties:
                        cores:
                          description: Cores is the number of cores per socket. Total
                            CPUs is (Sockets * Cores)
                          format: int32
                          type: integer
                        sockets:
                          description: Sockets is the number of sockets for a VM.
                            Total CPUs is (Sockets * Cores)
                          format: int32
                          type: integer
                      required:
                      - cores
                      - sockets
                      type: object
                    instanceTypeID:
                      description: InstanceTypeID defines the VM instance type and
                        overrides the hardware parameters of the created VM, including
                        cpu and memory. If InstanceTypeID is passed, all memory and
                        cpu variables will be ignored.
                      type: string
                    memoryMB:
                      description: MemoryMB is the size of a VM's memory in MiBs.
                      format: int32
                      type: integer
                    osDisk:
                      description: OSDisk is the the root disk of the node.
                      properties:
                        sizeGB:
                          description: SizeGB size of the bootable disk in GiB.
                          format: int64
                          type: integer
                      required:
                      - sizeGB
                      type: object
                    vmType:
                      description: VMType defines the workload type of the VM.
                      enum:
                      - ""
                      - desktop
                      - server
                      - high_performance
                      type: string
                  type: object
                vsphere:
                  description: VSphere is the configuration used when installing on
                    vSphere.
                  properties:
                    coresPerSocket:
                      description: NumCoresPerSocket is the number of cores per socket
                        in a vm. The number of vCPUs on the vm will be NumCPUs/NumCoresPerSocket.
                      format: int32
                      type: integer
                    cpus:
                      description: NumCPUs is the total number of virtual processor
                        cores to assign a vm.
                      format: int32
                      type: integer
                    memoryMB:
                      description: Memory is the size of a VM's memory in MB.
                      format: int64
                      type: integer
                    osDisk:
                      description: OSDisk defines the storage for instance.
                      properties:
                        diskSizeGB:
                          description: DiskSizeGB defines the size of disk in GB.
                          format: int32
                          type: integer
                      type: object
                  type: object
              type: object
            imageSetRef:
              description: ImageSetRef is a reference to a ClusterImageSet. The release
                image specified in the ClusterImageSet will be used by clusters created
                for this cluster pool.
              properties:
                name:
                  description: Name is the name of the ClusterImageSet that this refers
                    to
                  type: string
              required:
              - name
              type: object
            labels:
              additionalProperties:
                type: string
              description: Labels to be applied to new ClusterDeployments created
                for the pool. ClusterDeployments that have already been claimed will
                not be affected when this value is modified.
              type: object
            platform:
              description: Platform encompasses the desired platform for the cluster.
              properties:
                aws:
                  description: AWS is the configuration used when installing on AWS.
                  properties:
                    credentialsSecretRef:
                      description: CredentialsSecretRef refers to a secret that contains
                        the AWS account access credentials.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    region:
                      description: Region specifies the AWS region where the cluster
                        will be created.
                      type: string
                    userTags:
                      additionalProperties:
                        type: string
                      description: UserTags specifies additional tags for AWS resources
                        created for the cluster.
                      type: object
                  required:
                  - credentialsSecretRef
                  - region
                  type: object
                azure:
                  description: Azure is the configuration used when installing on
                    Azure.
                  properties:
                    baseDomainResourceGroupName:
                      description: BaseDomainResourceGroupName specifies the resource
                        group where the azure DNS zone for the base domain is found
                      type: string
                    credentialsSecretRef:
                      description: CredentialsSecretRef refers to a secret that contains
                        the Azure account access credentials.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    region:
                      description: Region specifies the Azure region where the cluster
                        will be created.
                      type: string
                    resourceGroupName:
                      description: ResourceGroupName specifies the name of the Azure
                        resource group containing the custer. This must match the
                        name of the Azure resource group specified in the InstallConfig.
                        If the name of the Azure resource group is omitted from the
                        InstallConfig, then it must be omitted here as well.
                      type: string
                  required:
                  - credentialsSecretRef
                  - region
                  type: object
                baremetal:
                  description: BareMetal is the configuration used when installing
                    on bare metal.
                  properties:
                    libvirtSSHPrivateKeySecretRef:
                      description: LibvirtSSHPrivateKeySecretRef is the reference
                        to the secret that contains the private SSH key to use for
                        access to the libvirt provisioning host. The SSH private key
                        is expected to be in the secret data under the "ssh-privatekey"
                        key.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                  required:
                  - libvirtSSHPrivateKeySecretRef
                  type: object
                gcp:
                  description: GCP is the configuration used when installing on Google
                    Cloud Platform.
                  properties:
                    credentialsSecretRef:
                      description: CredentialsSecretRef refers to a secret that contains
                        the GCP account access credentials.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    region:
                      description: Region specifies the GCP region where the cluster
                        will be created.
                      type: string
                  required:
                  - credentialsSecretRef
                  - region
                  type: object
                openstack:
                  description: OpenStack is the configuration used when installing
                    on OpenStack
                  properties:
                    cloud:
                      description: Cloud will be used to indicate the OS_CLOUD value
                        to use the right section from the cloud.yaml in the CredentialsSecretRef.
                      type: string
                    credentialsSecretRef:
                      description: CredentialsSecretRef refers to a secret that contains
                        the OpenStack account access credentials.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    trunkSupport:
                      description: TrunkSupport indicates whether or not to use trunk
                        ports in your OpenShift cluster.
                      type: boolean
                  required:
                  - cloud
                  - credentialsSecretRef
                  type: object
                ovirt:
                  description: Ovirt is the configuration used when installing on
                    oVirt
                  properties:
                    certificatesSecretRef:
                      description: CertificatesSecretRef refers to a secret that contains
                        the oVirt CA certificates necessary for communicating with
                        oVirt.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    credentialsSecretRef:
                      description: 'CredentialsSecretRef refers to a secret that contains
                        the oVirt account access credentials with fields: ovirt_url,
                        ovirt_username, ovirt_password, ovirt_ca_bundle'
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    ovirt_cluster_id:
                      description: The target cluster under which all VMs will run
                      type: string
                    ovirt_network_name:
                      description: The target network of all the network interfaces
                        of the nodes. Omitting defaults to ovirtmgmt network which
                        is a default network for evert ovirt cluster.
                      type: string
                    storage_domain_id:
                      description: The target storage domain under which all VM disk
                        would be created.
                      type: string
                  required:
                  - certificatesSecretRef
                  - credentialsSecretRef
                  - ovirt_cluster_id
                  - storage_domain_id
                  type: object
                vsphere:
                  description: VSphere is the configuration used when installing on
                    vSphere
                  properties:
                    certificatesSecretRef:
                      description: CertificatesSecretRef refers to a secret that contains
                        the vSphere CA certificates necessary for communicating with
                        the VCenter.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    cluster:
                      description: Cluster is the name of the cluster virtual machines
                        will be cloned into.
                      type: string
                    credentialsSecretRef:
                      description: 'CredentialsSecretRef refers to a secret that contains
                        the vSphere account access credentials: GOVC_USERNAME, GOVC_PASSWORD
                        fields.'
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    datacenter:
                      description: Datacenter is the name of the datacenter to use
                        in the vCenter.
                      type: string
                    defaultDatastore:
                      description: DefaultDatastore is the default datastore to use
                        for provisioning volumes.
                      type: string
                    folder:
                      description: Folder is the name of the folder that will be used
                        and/or created for virtual machines.
                      type: string
                    network:
                      description: Network specifies the name of the network to be
                        used by the cluster.
                      type: string
                    vCenter:
                      description: VCenter is the domain name or IP address of the
                        vCenter.
                      type: string
                  required:
                  - certificatesSecretRef
                  - credentialsSecretRef
                  - datacenter
                  - defaultDatastore
                  - vCenter
                  type: object
              type: object
            pullSecretRef:
              description: PullSecretRef is the reference to the secret to use when
                pulling images.
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
            size:
              description: Size is the default number of clusters that we should keep
                provisioned and waiting for use.
              format: int32
              minimum: 0
              type: integer
            workerMachinePool:
              description: WorkerMachinePool allows defining a machinepool declaration
                for new worker nodes
              properties:
                aws:
                  description: AWS is the configuration used when installing on AWS.
                  properties:
                    amiID:
                      description: AMIID is the AMI that should be used to boot the
                        ec2 instance. If set, the AMI should belong to the same region
                        as the cluster.
                      type: string
                    rootVolume:
                      description: EC2RootVolume defines the root volume for EC2 instances
                        in the machine pool.
                      properties:
                        iops:
                          description: IOPS defines the amount of provisioned IOPS.
                            This is only valid for type io1.
                          minimum: 0
                          type: integer
                        kmsKeyARN:
                          description: The KMS key that will be used to encrypt the
                            EBS volume. If no key is provided the default KMS key
                            for the account will be used. https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetEbsDefaultKmsKeyId.html
                          type: string
                        size:
                          description: Size defines the size of the volume in gibibytes
                            (GiB).
                          minimum: 0
                          type: integer
                        type:
                          description: Type defines the type of the volume.
                          type: string
                      required:
                      - size
                      - type
                      type: object
                    type:
                      description: InstanceType defines the ec2 instance type. eg.
                        m4-large
                      type: string
                    zones:
                      description: Zones is list of availability zones that can be
                        used.
                      items:
                        type: string
                      type: array
                  type: object
                azure:
                  description: Azure is the configuration used when installing on
                    Azure.
                  properties:
                    osDisk:
                      description: OSDisk defines the storage for instance.
                      properties:
                        diskSizeGB:
                          description: DiskSizeGB defines the size of disk in GB.
                          format: int32
                          minimum: 0
                          type: integer
                        diskType:
                          description: DiskType defines the type of disk. The valid
                            values are Standard_LRS, Premium_LRS, StandardSSD_LRS
                            For control plane nodes, the valid values are Premium_LRS
                            and StandardSSD_LRS. Default is Premium_LRS
                          enum:
                          - Standard_LRS
                          - Premium_LRS
                          - StandardSSD_LRS
                          type: string
                      required:
                      - diskSizeGB
                      type: object
                    type:
                      description: InstanceType defines the azure instance type. eg.
                        Standard_DS_V2
                      type: string
                    zones:
                      description: Zones is list of availability zones that can be
                        used. eg. ["1", "2", "3"]
                      items:
                        type: string
                      type: array
                  type: object
                baremetal:
                  description: BareMetal is the configuration used when installing
                    on bare metal.
                  type: object
                gcp:
                  description: GCP is the configuration used when installing on GCP
                  properties:
                    osDisk:
                      description: OSDisk defines the storage for instance.
                      properties:
                        DiskSizeGB:
                          description: DiskSizeGB defines the size of disk in GB.
                          format: int64
                          maximum: 65536
                          minimum: 16
                          type: integer
                        DiskType:
                          description: DiskType defines the type of disk. The valid
                            values are pd-standard and pd-ssd For control plane nodes,
                            the valid value is pd-ssd.
                          enum:
                          - pd-ssd
                          - pd-standard
                          type: string
                      required:
                      - DiskSizeGB
                      type: object
                    type:
                      description: InstanceType defines the GCP instance type. eg.
                        n1-standard-4
                      type: string
                    zones:
                      description: Zones is list of availability zones that can be
                        used.
                      items:
                        type: string
                      type: array
                  type: object
                libvirt:
                  description: Libvirt is the configuration used when installing on
                    libvirt.
                  type: object
                openstack:
                  description: OpenStack is the configuration used when installing
                    on OpenStack.
                  properties:
                    additionalNetworkIDs:
                      description: AdditionalNetworkIDs contains IDs of additional
                        networks for machines, where each ID is presented in UUID
                        v4 format. Allowed address pairs won't be created for the
                        additional networks.
                      items:
                        type: string
                      type: array
                    additionalSecurityGroupIDs:
                      description: AdditionalSecurityGroupIDs contains IDs of additional
                        security groups for machines, where each ID is presented in
                        UUID v4 format.
                      items:
                        type: string
                      type: array
                    rootVolume:
                      description: RootVolume defines the root volume for instances
                        in the machine pool. The instances use ephemeral disks if
                        not set.
                      properties:
                        size:
                          description: Size defines the size of the volume in gibibytes
                            (GiB). Required
                          type: integer
                        type:
                          description: Type defines the type of the volume. Required
                          type: string
                      required:
                      - size
                      - type
                      type: object
                    type:
                      description: FlavorName defines the OpenStack Nova flavor. eg.
                        m1.large
                      type: string
                    zones:
                      description: Zones is the list of availability zones where the
                        instances should be deployed. If no zones are provided, all
                        instances will be deployed on OpenStack Nova default availability
                        zone
                      items:
                        type: string
                      type: array
                  required:
                  - type
                  type: object
                ovirt:
                  description: Ovirt is the configuration used when installing on
                    oVirt.
                  properties:
                    cpu:
                      description: CPU defines the VM CPU.
                      properties:
                        cores:
                          description: Cores is the number of cores per socket. Total
                            CPUs is (Sockets * Cores)
                          format: int32
                          type: integer
                        sockets:
                          description: Sockets is the number of sockets for a VM.
                            Total CPUs is (Sockets * Cores)
                          format: int32
                          type: integer
                      required:
                      - cores
                      - sockets
                      type: object
                    instanceTypeID:
                      description: InstanceTypeID defines the VM instance type and
                        overrides the hardware parameters of the created VM, including
                        cpu and memory. If InstanceTypeID is passed, all memory and
                        cpu variables will be ignored.
                      type: string
                    memoryMB:
                      description: MemoryMB is the size of a VM's memory in MiBs.
                      format: int32
                      type: integer
                    osDisk:
                      description: OSDisk is the the root disk of the node.
                      properties:
                        sizeGB:
                          description: SizeGB size of the bootable disk in GiB.
                          format: int64
                          type: integer
                      required:
                      - sizeGB
                      type: object
                    vmType:
                      description: VMType defines the workload type of the VM.
                      enum:
                      - ""
                      - desktop
                      - server
                      - high_performance
                      type: string
                  type: object
                vsphere:
                  description: VSphere is the configuration used when installing on
                    vSphere.
                  properties:
                    coresPerSocket:
                      description: NumCoresPerSocket is the number of cores per socket
                        in a vm. The number of vCPUs on the vm will be NumCPUs/NumCoresPerSocket.
                      format: int32
                      type: integer
                    cpus:
                      description: NumCPUs is the total number of virtual processor
                        cores to assign a vm.
                      format: int32
                      type: integer
                    memoryMB:
                      description: Memory is the size of a VM's memory in MB.
                      format: int64
                      type: integer
                    osDisk:
                      description: OSDisk defines the storage for instance.
                      properties:
                        diskSizeGB:
                          description: DiskSizeGB defines the size of disk in GB.
                          format: int32
                          type: integer
                      type: object
                  type: object
              type: object
          required:
          - baseDomain
          - imageSetRef
          - platform
          - size
          type: object
        status:
          description: ClusterPoolStatus defines the observed state of ClusterPool
          properties:
            conditions:
              description: Conditions includes more detailed status for the cluster
                pool
              items:
                description: ClusterPoolCondition contains details for the current
                  condition of a cluster pool
                properties:
                  lastProbeTime:
                    description: LastProbeTime is the last time we probed the condition.
                    format: date-time
                    type: string
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: Message is a human-readable message indicating details
                      about last transition.
                    type: string
                  reason:
                    description: Reason is a unique, one-word, CamelCase reason for
                      the condition's last transition.
                    type: string
                  status:
                    description: Status is the status of the condition.
                    type: string
                  type:
                    description: Type is the type of the condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            ready:
              description: Ready is the number of unclaimed clusters that have been
                installed and are ready to be claimed.
              format: int32
              type: integer
            size:
              description: Size is the number of unclaimed clusters that have been
                created for the pool.
              format: int32
              type: integer
          required:
          - ready
          - size
          type: object
      required:
      - spec
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
